version: "3.8"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: app_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  kafka-drop:
    image: obsidiandynamics/kafdrop:latest

    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    ports:
      - "9000:9000"
    restart: "unless-stopped"
    depends_on:
      - kafka

  writer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: prod.raw.user_actions
    ports:
      - "8081:8081"
    depends_on:
      - kafka

  reader:
    build:
      context: ./processor
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: prod.raw.user_actions
      DATABASE_URL: postgres://user:password@postgres:5432/app_db?sslmode=disable
    depends_on:
      - kafka

volumes:
  postgres_data:
